.inputContainer {
  position: relative;
  width: 100%;
}

.input {
  width: 100%;
  padding: 1rem 1.25rem;
  font-size: 0.95rem;
  font-weight: 400;
  line-height: 1.5;
  color: var(--foreground);
  background: 
    linear-gradient(135deg, 
      rgba(255, 255, 255, 0.05) 0%, 
      rgba(255, 255, 255, 0.02) 100%
    );
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  backdrop-filter: blur(10px);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  z-index: 2;
  
  &::placeholder {
    color: var(--muted-foreground);
    font-weight: 400;
    transition: all 0.3s ease;
  }
  
  &:hover:not(:disabled):not(:focus) {
    border-color: rgba(255, 255, 255, 0.2);
    background: 
      linear-gradient(135deg, 
        rgba(255, 255, 255, 0.08) 0%, 
        rgba(255, 255, 255, 0.04) 100%
      );
    transform: translateY(-1px);
  }
  
  &:focus {
    outline: none;
    border-color: rgba(255, 255, 255, 0.4);
    background: 
      linear-gradient(135deg, 
        rgba(255, 255, 255, 0.1) 0%, 
        rgba(255, 255, 255, 0.05) 100%
      );
    transform: translateY(-2px);
    box-shadow: 
      0 0 0 3px rgba(255, 255, 255, 0.1),
      0 10px 25px rgba(0, 0, 0, 0.2);
    
    &::placeholder {
      color: var(--muted);
      transform: translateX(4px);
    }
    
    & + .inputGlow {
      opacity: 1;
      transform: scale(1);
    }
    
    & + .inputGlow + .inputBorder {
      opacity: 1;
      animation: borderPulse 2s ease-in-out infinite;
    }
  }
  
  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
    background: rgba(255, 255, 255, 0.02);
    transform: none;
  }
  
  // Enhanced error state
  &.error {
    border-color: #ff6b6b;
    background: 
      linear-gradient(135deg, 
        rgba(255, 107, 107, 0.1) 0%, 
        rgba(255, 107, 107, 0.05) 100%
      );
    animation: errorShake 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    
    &:focus {
      border-color: #ff5252;
      box-shadow: 
        0 0 0 3px rgba(255, 107, 107, 0.2),
        0 10px 25px rgba(255, 107, 107, 0.1);
    }
  }
  
  // Success state
  &.success {
    border-color: #4caf50;
    background: 
      linear-gradient(135deg, 
        rgba(76, 175, 80, 0.1) 0%, 
        rgba(76, 175, 80, 0.05) 100%
      );
    
    &:focus {
      border-color: #43a047;
      box-shadow: 
        0 0 0 3px rgba(76, 175, 80, 0.2),
        0 10px 25px rgba(76, 175, 80, 0.1);
    }
  }
}

.inputGlow {
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: 
    linear-gradient(45deg, 
      rgba(255, 255, 255, 0.1), 
      rgba(255, 255, 255, 0.05), 
      rgba(255, 255, 255, 0.1)
    );
  border-radius: 14px;
  opacity: 0;
  transform: scale(0.95);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  z-index: 1;
  filter: blur(4px);
}

.inputBorder {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  background: linear-gradient(
    45deg,
    transparent 30%,
    rgba(255, 255, 255, 0.3) 50%,
    transparent 70%
  );
  background-size: 200% 200%;
  border-radius: 13px;
  opacity: 0;
  z-index: 0;
}

@keyframes errorShake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-4px); }
  20%, 40%, 60%, 80% { transform: translateX(4px); }
}

@keyframes borderPulse {
  0%, 100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}
